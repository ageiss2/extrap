default:
  image: python:3.9
  tags: [ public-docker ]

stages:
  - test
  - run
  - release

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - python -m pip install --upgrade pip
  - pip install .


.test:
  script:    
    - pip install pytest pytest-cov # flake8
#    - flake8 --max-line-length=120 extrap tests setup.py
    - cd tests
    - pytest . --ignore-glob=test_gui*.py --doctest-modules --junitxml=junit/test-results.xml --cov --cov-report=xml:junit/coverage.xml --cov-report=html:coverage
  artifacts:
    when: always
    paths:
      - tests/junit/test-results.xml
      - tests/coverage/*
    reports:
      junit: tests/junit/test-results.xml
      coverage_report:
        coverage_format: cobertura
        path: tests/junit/coverage.xml

test-3.8:
    extends: ".test"
    image: "python:3.8"

test-3.9:
    extends: ".test"
    image: "python:3.9"

test-3.10:
    extends: ".test"
    image: "python:3.10"

test-3.11:
    extends: ".test"
    image: "python:3.11"

test-macos:
    extends: ".test"
    tags:
      - macos
    image: ghcr.io/cirruslabs/macos-sonoma-base:latest
    before_script:
      - brew install python3.9
      - python3.9 --version  # For debugging
      - python3.9 -m venv venv
      - source venv/bin/activate
      - python -m pip install --upgrade pip
      - pip install .


run:
  script:    
    - extrap --version

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+.*/'                 # Run this job when a tag is created
  before_script:
    - echo "running release_job" 
  script:
    - echo "running release_job"
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'


upload_release_job:
  stage: release
  tags: [ deep-sea, jacamar, shell ]
  cache: {}
  rules:
    - if: '$CI_SERVER_HOST != "gitlab.jsc.fz-juelich.de"'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+.*/'
  before_script:
    - echo "Project located at $CI_PROJECT_DIR" 
  script:
    - mkdir -p /p/project/deepsea/wp2/install_packages/extrap/
    - rm -rf .git
    - cd ..
    - mv "$CI_PROJECT_DIR" "$CI_PROJECT_NAME-$CI_COMMIT_TAG"
    - tar -czf "/p/project/deepsea/wp2/install_packages/extrap/$CI_PROJECT_NAME-$CI_COMMIT_TAG.tar.gz" "$CI_PROJECT_NAME-$CI_COMMIT_TAG" 